/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
export namespace Components {
    interface SafetySlider {
        "hasNoArrows": boolean;
        "hasNoDots": boolean;
        "isInfinite": boolean;
        "leftArrowInnerHTML": string;
        "rightArrowInnerHTML": string;
        "setActiveSlide": (newActiveSlide: number) => Promise<void>;
    }
    interface SafetySliderDots {
        "activeDot": number;
        "dotCount": number;
    }
    interface SafetySliderSlides {
        "activeSlide": number;
    }
    interface SafetySliderWindow {
    }
}
declare global {
    interface HTMLSafetySliderElement extends Components.SafetySlider, HTMLStencilElement {
    }
    var HTMLSafetySliderElement: {
        prototype: HTMLSafetySliderElement;
        new (): HTMLSafetySliderElement;
    };
    interface HTMLSafetySliderDotsElement extends Components.SafetySliderDots, HTMLStencilElement {
    }
    var HTMLSafetySliderDotsElement: {
        prototype: HTMLSafetySliderDotsElement;
        new (): HTMLSafetySliderDotsElement;
    };
    interface HTMLSafetySliderSlidesElement extends Components.SafetySliderSlides, HTMLStencilElement {
    }
    var HTMLSafetySliderSlidesElement: {
        prototype: HTMLSafetySliderSlidesElement;
        new (): HTMLSafetySliderSlidesElement;
    };
    interface HTMLSafetySliderWindowElement extends Components.SafetySliderWindow, HTMLStencilElement {
    }
    var HTMLSafetySliderWindowElement: {
        prototype: HTMLSafetySliderWindowElement;
        new (): HTMLSafetySliderWindowElement;
    };
    interface HTMLElementTagNameMap {
        "safety-slider": HTMLSafetySliderElement;
        "safety-slider-dots": HTMLSafetySliderDotsElement;
        "safety-slider-slides": HTMLSafetySliderSlidesElement;
        "safety-slider-window": HTMLSafetySliderWindowElement;
    }
}
declare namespace LocalJSX {
    interface SafetySlider {
        "hasNoArrows"?: boolean;
        "hasNoDots"?: boolean;
        "isInfinite"?: boolean;
        "leftArrowInnerHTML"?: string;
        "rightArrowInnerHTML"?: string;
    }
    interface SafetySliderDots {
        "activeDot"?: number;
        "dotCount"?: number;
        "onSafetySliderDotClick"?: (event: CustomEvent<number>) => void;
    }
    interface SafetySliderSlides {
        "activeSlide"?: number;
    }
    interface SafetySliderWindow {
    }
    interface IntrinsicElements {
        "safety-slider": SafetySlider;
        "safety-slider-dots": SafetySliderDots;
        "safety-slider-slides": SafetySliderSlides;
        "safety-slider-window": SafetySliderWindow;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "safety-slider": LocalJSX.SafetySlider & JSXBase.HTMLAttributes<HTMLSafetySliderElement>;
            "safety-slider-dots": LocalJSX.SafetySliderDots & JSXBase.HTMLAttributes<HTMLSafetySliderDotsElement>;
            "safety-slider-slides": LocalJSX.SafetySliderSlides & JSXBase.HTMLAttributes<HTMLSafetySliderSlidesElement>;
            "safety-slider-window": LocalJSX.SafetySliderWindow & JSXBase.HTMLAttributes<HTMLSafetySliderWindowElement>;
        }
    }
}
